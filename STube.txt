unit STube;

interface

uses
  Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,
  ExtCtrls, StdCtrls, Menus;

type
  TMainForm = class(TForm)
    Panel1: TPanel;
    Panel2: TPanel;
    P0_Edit: TEdit;
    Label1: TLabel;
    Label3: TLabel;
    Panel3: TPanel;
    Label2: TLabel;
    MainMenu1: TMainMenu;
    Panel4: TPanel;
    Label4: TLabel;
    Label5: TLabel;
    Enter_Button: TButton;
    T0_Edit: TEdit;
    Lbase_Edit: TEdit;
    time_Edit: TEdit;
    Label6: TLabel;
    Label7: TLabel;
    Label8: TLabel;
    Label9: TLabel;
    Label10: TLabel;
    Label11: TLabel;
    Tterms_RadioGroup: TRadioGroup;
    P_inc_Edit: TEdit;
    T_inc_Edit: TEdit;
    P_ref_Edit: TEdit;
    T_ref_Edit: TEdit;
    V_inc_Edit: TEdit;
    M_inc_Edit: TEdit;
    V_ref_Edit: TEdit;
    M_ref_Edit: TEdit;
    Label12: TLabel;
    Label13: TLabel;
    Label14: TLabel;
    Label15: TLabel;
    Label16: TLabel;
    Label17: TLabel;
    Label18: TLabel;
    Label19: TLabel;
    Label20: TLabel;
    Label21: TLabel;
    Label22: TLabel;
    Label23: TLabel;
    Label24: TLabel;
    Label25: TLabel;
    Label26: TLabel;
    Label27: TLabel;
    Pterms_RadioGroup: TRadioGroup;
    Label28: TLabel;
    Label29: TLabel;
    Label30: TLabel;
    Label31: TLabel;
    Pterms_Label1: TLabel;
    Pterms_Label2: TLabel;
    Tterms_Label1: TLabel;
    Tterms_Label2: TLabel;
    Result_Label: TLabel;
    Errcomment_Label: TLabel;
    Exit1: TMenuItem;
    File1: TMenuItem;
    OpenDialog: TOpenDialog;
    SaveDialog: TSaveDialog;
    Loadfromfile1: TMenuItem;
    SavetoINPfile1: TMenuItem;
    Mixture_Memo: TMemo;
    Addmix_Button: TButton;
    Addmix_Edit: TEdit;
    Mixtures_Combobox: TComboBox;
    Save_Button: TButton;
    Creatoutputfile1: TMenuItem;
    procedure Pterms_RadioGroupClick(Sender: TObject);
    procedure Tterms_RadioGroupClick(Sender: TObject);
    procedure Enter_ButtonClick(Sender: TObject);
    procedure Exit1Click(Sender: TObject);
    procedure OnStart(Sender: TObject);
    procedure LoadfromINPfileClick(Sender: TObject);
    procedure SavetoINPfileClick(Sender: TObject);
    procedure Mixtures_ComboBoxChange(Sender: TObject);
    procedure Addmix_ButtonClick(Sender: TObject);
    procedure Save_ButtonClick(Sender: TObject);
    procedure OnClose(Sender: TObject; var Action: TCloseAction);
    procedure Creatoutputfile1Click(Sender: TObject);

  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  MainForm: TMainForm;

implementation

{$R *.DFM}



procedure TMainForm.Pterms_RadioGroupClick(Sender: TObject);
var
   s:string;
   x:real;
   Val_errcode:integer;
begin

   if Pterms_RadioGroup.ItemIndex = 0 then
      begin
         Val(P0_Edit.Text,x,Val_errcode);
         x:=x*760;
         Str(x:4:0,s);
         P0_Edit.Text:=s;
      end;
    if Pterms_RadioGroup.ItemIndex = 1 then
      begin
         Val(P0_Edit.Text,x,Val_errcode);
         x:=x/760;
         Str(x:2:3,s);
         P0_Edit.Text:=s;
      end;
end;

procedure TMainForm.Tterms_RadioGroupClick(Sender: TObject);
var
   s:string;
   x:real;
   Val_errcode:integer;
begin
   if Tterms_RadioGroup.ItemIndex = 0 then
      begin
         Val(T0_Edit.Text,x,Val_errcode);
         x:=x+273.16;
         Str(x:4:0,s);
         T0_Edit.Text:=s;
      end;
    if Tterms_RadioGroup.ItemIndex = 1 then
      begin
         Val(T0_Edit.Text,x,Val_errcode);
         x:=x-273.16;
         Str(x:4:0,s);
         T0_Edit.Text:=s;
      end;
end;

procedure TMainForm.Enter_ButtonClick(Sender: TObject);
const
   R = 8.31;
   ns = 62;
   ms = 15;
type
   Arrtype = array[1..ns] of real;

   Compinfotype = record
             name:string;
             part:real;
             weight:real;
             Cp:Arrtype;
           Entl:Arrtype;
          gamma:Arrtype;
        end;

   Mixtype = array[0..ms] of compinfotype;

var
   Mixture:Mixtype;
   T:Arrtype;
   P0,P_inc,P_ref,T0,T_inc,T_ref,Lbase,time,
   V_inc,V_ref,M_inc,M_ref,a0,a1,a2,r1r0,r2r0,P1P0,P2P0:real;
   N_comp,N_T:integer;
   Errcode:boolean;

   Function IntLin(y,x:Arrtype; s:real):real;
      var
         i:byte;
      begin
         i:=1;
         While (x[i-1]<s)and(i<61) do
         Inc(i);
         IntLin:=(y[i]-y[i-1])*(s-x[i-1])/(x[i]-x[i-1])+y[i-1]
       end;

   procedure Initial_Data_Reading(var PO,T0,Lbase,time:real);
      var
         Val_errcode:integer;
      begin   {Initial data reading }
        {P0}
         Val(P0_Edit.Text,P0,Val_errcode);
         if (Val_errcode<>0) or (P0<=0) then
         begin
            Errcode:=true;
            Result_Label.Caption:='ERROR !';
            Errcomment_Label.Caption:='Check P value';
            Exit;
         end;
         if Pterms_RadioGroup.ItemIndex = 0 then P0:=P0*101325/760;
         if Pterms_RadioGroup.ItemIndex = 1 then P0:=P0*101325;
        {T0}
         Val(T0_Edit.Text,T0,Val_errcode);
         if (Val_errcode<>0) or ((Tterms_Radiogroup.ItemIndex=0) and (T0<=0))
             or ((Tterms_Radiogroup.ItemIndex=1) and (T0<=-273.16))then
         begin
            Errcode:=true;
            Result_Label.Caption:='ERROR !';
            Errcomment_Label.Caption:='Check T value';
            Exit;
         end;
         if Tterms_RadioGroup.ItemIndex = 1 then T0:=T0+273.16;
        {Lbase}
         Val(Lbase_Edit.Text,Lbase,Val_errcode);
         if (Val_errcode<>0) or (Lbase<=0)then
         begin
            Errcode:=true;
            Result_Label.Caption:='ERROR !';
            Errcomment_Label.Caption:='Check L value';
            Exit;
         end;
         Lbase:=Lbase/1000;
         {time}
         Val(time_Edit.Text,time,Val_errcode);
         if (Val_errcode<>0) or (time<=0)then
         begin
            Errcode:=true;
            Result_Label.Caption:='ERROR !';
            Errcomment_Label.Caption:='Check t value';
            Exit;
         end;
         time:=time/1000000;
      end; {Initial data reading }

   procedure Read_Mixture(var Mixture:mixtype);
      var
         mixfile:Textfile;
         s:string;
         i,Val_errcode:integer;
      begin {Read mixture}
         if Mixtures_Combobox.Text='' then begin
            Errcode:=true;
            Result_Label.Caption:='ERROR !';
            Errcomment_Label.Caption:='Check mixture name';
            Exit;
         end;
         AssignFile(mixfile,Mixtures_Combobox.Text+'.mxt.txt');
         Reset(mixfile);
         i:=0;
         N_comp:=0;
         While EOF(mixfile)=false do begin
            i:=i+1;
            N_comp:=N_comp+1;
            Readln(mixfile,s);
            Mixture[i].name:=s;
            Readln(mixfile,s);
            Val(s,Mixture[i].part,Val_errcode);
         end;
      end;   {Read mixture}

   procedure Read_EQL_File(var Mixture:Mixtype);
      var
         i,j:integer;
         EQL_File:Textfile;
      begin  {Read EQL File}
         For i:=1 to N_comp do begin
            AssignFile(EQL_File,'TERMODAT\'+Mixture[i].name+'.eql');
            Reset(EQL_File);
            Readln(EQL_File, Mixture[i].Name);
            Readln(EQL_File, Mixture[i].Weight);
            Readln(EQL_File);
            j:=0;
            Repeat
               Inc(j);
               Readln(EQL_File, T[j], Mixture[i].Cp[j], Mixture[i].Entl[j]);
            Until SeekEof(EQL_File);
            N_T:=j;
            CloseFile(EQL_File);
         end;
      end;  {Read EQL File}

   procedure Calc_Mixture_Data(var Mixture:Mixtype);
      var
         SumPart:real;
         i,j:integer;
      begin
         Mixture[0].Weight:=0;
         SumPart:=0;
         for i:=1 to N_comp do
            SumPart:=SumPart+Mixture[i].Part;
         for i:=1 to N_comp do
            Mixture[0].Weight:=Mixture[0].Weight+
               Mixture[i].Weight*(Mixture[i].Part/SumPart);
         Mixture[0].Weight:=Mixture[0].weight*0.001;
         for j:=1 to N_T do begin
            Mixture[0].Entl[j]:=0;
            Mixture[0].Cp[j]:=0;
            for i:=1 to N_comp do begin
               Mixture[0].Entl[j]:=Mixture[0].Entl[j]+(Mixture[i].Entl[j]-
                  Mixture[i].Entl[3])*(Mixture[i].Part/SumPart);
               Mixture[0].Cp[j]:= Mixture[0].Cp[j] +
                     Mixture[i].Cp[j]*(Mixture[i].Part/SumPart)
            end;
             Mixture[0].Gamma[j]:= Mixture[0].Cp[j]/(Mixture[0].Cp[j]-R)
          end;
      end;

   procedure Calc_Incident_Wave(var P_inc,T_inc,V_inc,M_inc,r1r0:real);
      var
         Gamma0:real;
         x,Pa,Pb,H0:extended;
         js:shortint;
      function Sign(x,y:real):shortint;
         begin
            if x<y then Sign:=1 else Sign:=-1;
         end;
      begin
         {V,M calculation}
         V_inc:=Lbase/time;
         gamma0:=IntLin(Mixture[0].Gamma,T,T0);
         a0:=sqrt(gamma0*T0*R/Mixture[0].weight);
         M_inc:=V_inc/a0;
         r1r0:=(Gamma0+1)/(Gamma0-1);
         Pa:=1; Pb:=2; js:=0; x:=0.01*r1r0;
         While Abs(Pa-Pb)>=1E-5 do begin
             H0:=((0.5*V_inc*V_inc*(1-sqr(1/r1r0)) + IntLin(Mixture[0].Entl,T,T0))*0.001)*Mixture[0].weight;
             T_inc:=IntLin(T,Mixture[0].Entl,H0);
             Pa:=r1r0*(T_inc/T0);
             Pb:=1+(V_inc*V_inc*Mixture[0].weight/(T0*R))*(1-1/r1r0);
             if js*Sign(Pa,Pb)<=0 then x:=0.1*x;
             js:=Sign(Pa,Pb);
             if Pa<Pb then r1r0:=r1r0+x
                   else r1r0:=r1r0-x;
         end;
         P1P0:=0.5*(Pa+Pb);
         P_inc:=P0*P1P0;
      end;

   procedure Calc_Reflected_Wave(var P_ref,T_ref,V_ref,M_ref:real);
      var
         H1,H2,s0,s1,Ta,Tb,gamma0,gamma1,x:real;
         js:shortint;
      function Sign(x,y:real):shortint;
         begin
            if x<y then Sign:=1 else Sign:=-1;
         end;
      begin
         gamma0:=IntLin(Mixture[0].gamma,T,T0);
         gamma1:=IntLin(Mixture[0].gamma,T,T_inc);
         a1:=SQRT(gamma1*T_inc*R/Mixture[0].weight);
         x:=20;
         Ta:=T_inc*(2*(gamma0-1)*M_inc*M_inc+3-gamma0)*
              (M_inc*M_inc*(3*gamma0-1)-2*gamma0+2)/sqr((gamma0+1)*M_inc);
         js:=0;
         H1:=IntLin(Mixture[0].Entl,T,T_inc);
         Repeat H2:=IntLin(Mixture[0].Entl,T,Ta);
            s0:=0.5*SQR(V_inc*(1-T_inc/T0/P1P0))*0.001;
            s1:=(H2-H1)/Mixture[0].Weight;
            Tb:=(s1-s0)*(T_inc/(s1+s0)+1E3*Mixture[0].Weight/R);
            if js*Sign(Ta,Tb)<=0 then x:=0.1*x;
               js:=Sign(Ta,Tb);
            if Ta>Tb then Ta:=Ta+x
                     else Ta:=Ta-x
         Until Abs(Ta-Tb)<1E-5;
         T_ref:=0.5*(Ta+Tb);
         r2r0:=r1r0*(s1+s0)/(s1-s0);
         P2P0:=r2r0*T_ref/T0;
         P_ref:=P0*P2P0;
         V_ref:=V_inc*(2+(2/(gamma0-1))*(1/P1P0))/((gamma0+1)/(gamma0-1)+1/P1P0);
         M_ref:=V_ref/a1;
      end;

   procedure Data_Output(P_inc,T_inc,V_inc,M_inc,P_ref,T_ref,V_ref,M_ref:real);
      var
         s:string[10];
         coef:real;
      begin  {Data Output}
          coef:=1/101325;
          Str((P_inc*coef):6:3,s);
          P_inc_Edit.Text:=s;
          Str((P_ref*coef):6:3,s);
          P_ref_Edit.Text:=s;
          Str((T_inc):6:0,s);
          T_inc_Edit.Text:=s;
          Str((T_ref):6:0,s);
          T_ref_Edit.Text:=s;
          Str(V_inc:6:1,s);
          V_inc_Edit.Text:=s;
          Str(V_ref:6:1,s);
          V_ref_Edit.Text:=s;
          Str(M_inc:2:3,s);
          M_inc_Edit.Text:=s;
          Str(M_ref:2:3,s);
          M_ref_Edit.Text:=s;
      end; {Data Output}

begin  {Main procedure}
   {Initialization}
   Result_Label.Caption:='';
   Errcomment_Label.Caption:='';
   Errcode:=false;
   {Data reading}
   Initial_Data_Reading(P0,T0,Lbase,time);
   Read_Mixture(Mixture);
   Read_EQL_File(Mixture);
   if errcode=true then exit;
   {Data processing}
   Calc_Mixture_Data(Mixture);
   {Get P_inc,T_inc,V_inc,M_inc}
   Calc_Incident_Wave(P_inc,T_inc,V_inc,M_inc,r1r0);
   {Get P_ref,T_ref,V_ref,M_ref}
   Calc_Reflected_Wave(P_ref,T_ref,V_ref,M_ref);
   {Data output}
   Data_Output(P_inc,T_inc,V_inc,M_inc,P_ref,T_ref,V_ref,M_ref)
end;  {Main procedure}


procedure TMainForm.Exit1Click(Sender: TObject);
begin  {Close the program}
   Close;
end;

procedure TMainForm.OnStart(Sender: TObject);
var
   inpfile:Textfile;
   s:string;
   x,Val_errcode:integer;
begin { Read the list of mixtures}
   Mixtures_ComboBox.Items.LoadFromFile('mixtures.sht.txt');
   AssignFile(inpfile,'shtube.inp.txt');
   Reset(inpfile);
   Readln(inpfile,s);
   Val(s,x,Val_errcode);
   Mixtures_Combobox.ItemIndex:=x;
   Readln(inpfile,s);
   Val(s,x,Val_errcode);
   Pterms_RadioGroup.ItemIndex:=x;
   Readln(inpfile,s);
   P0_Edit.Text:=s;
   Readln(inpfile,s);
   Val(s,x,Val_errcode);
   Tterms_RadioGroup.ItemIndex:=x;
   Readln(inpfile,s);
   T0_Edit.Text:=s;
   Readln(inpfile,s);
   Lbase_Edit.Text:=s;
   Readln(inpfile,s);
   time_Edit.Text:=s;
   CloseFile(inpfile);
   Mixture_Memo.Lines.LoadFromFile(Mixtures_Combobox.Text+'.mxt.txt');
end;

procedure TMainForm.LoadfromINPfileClick(Sender: TObject);
var
   inpfile:Textfile;
   s:string;
   x,Val_errcode:integer;
begin
   if OpenDialog.Execute then begin
      AssignFile(inpfile,OpenDialog.Filename);
      Reset(inpfile);
      Readln(inpfile,s);
      Val(s,x,Val_errcode);
      Mixtures_Combobox.ItemIndex:=x;
      Readln(inpfile,s);
      Val(s,x,Val_errcode);
      Pterms_RadioGroup.ItemIndex:=x;
      Readln(inpfile,s);
      P0_Edit.Text:=s;
      Readln(inpfile,s);
      Val(s,x,Val_errcode);
      Tterms_RadioGroup.ItemIndex:=x;
      Readln(inpfile,s);
      T0_Edit.Text:=s;
      Readln(inpfile,s);
      Lbase_Edit.Text:=s;
      Readln(inpfile,s);
      time_Edit.Text:=s;
      CloseFile(inpfile);
      Mixture_Memo.Lines.LoadFromFile(Mixtures_Combobox.Text+'.mxt.txt');
   end;

end;


procedure TMainForm.SavetoINPfileClick(Sender: TObject);
var
   inpfile:Textfile;
   s:string;
begin
   if Savedialog.Execute then begin
      AssignFile(inpfile,Savedialog.FileName+'.inp.txt');
      Rewrite(inpfile);
      Str(Mixtures_Combobox.ItemIndex,s);
      Writeln(inpfile,s);
      Str(Pterms_RadioGroup.ItemIndex,s);
      Writeln(inpfile,s);
      Writeln(inpfile,P0_Edit.Text);
      Str(Tterms_RadioGroup.ItemIndex,s);
      Writeln(inpfile,s);
      Writeln(inpfile,T0_Edit.Text);
      Writeln(inpfile,Lbase_Edit.Text);
      Writeln(inpfile,time_Edit.Text);
      CloseFile(inpfile);;
   end;
end;

procedure TMainForm.Mixtures_ComboBoxChange(Sender: TObject);
begin
   Errcomment_Label.Caption:='Press ENTER..';
   Mixture_Memo.Lines.LoadFromFile(Mixtures_Combobox.Text+'.mxt.txt');
end;

procedure TMainForm.Addmix_ButtonClick(Sender: TObject);
begin
   Addmix_Button.Visible:=False;
   Save_Button.Visible:=True;
   Addmix_Edit.Visible:=True;
   Mixture_Memo.ReadOnly:=False;
   Mixture_Memo.Lines.Clear;
end;

procedure TMainForm.Save_ButtonClick(Sender: TObject);
begin
   Mixture_Memo.Lines.SaveToFile(Addmix_Edit.Text+'.mxt.txt');
   Mixtures_Combobox.Items.Add(Addmix_Edit.Text);
   Mixtures_ComboBox.Items.SaveToFile('mixtures.sht.txt');
   Save_Button.Visible:=False;
   Addmix_Edit.Visible:=False;
   Addmix_Button.Visible:=True;
   Mixture_Memo.ReadOnly:=True;
   Mixtures_ComboBox.Items.LoadFromFile('mixtures.sht.txt');
end;

procedure TMainForm.OnClose(Sender: TObject; var Action: TCloseAction);
var
   inpfile:Textfile;
   s:string;
begin
   AssignFile(inpfile,'shtube.inp.txt');
   Rewrite(inpfile);
   Str(Mixtures_Combobox.ItemIndex,s);
   Writeln(inpfile,s);
   Str(Pterms_RadioGroup.ItemIndex,s);
   Writeln(inpfile,s);
   Writeln(inpfile,P0_Edit.Text);
   Str(Tterms_RadioGroup.ItemIndex,s);
   Writeln(inpfile,s);
   Writeln(inpfile,T0_Edit.Text);
   Writeln(inpfile,Lbase_Edit.Text);
   Writeln(inpfile,time_Edit.Text);
   CloseFile(inpfile);
end;


procedure TMainForm.Creatoutputfile1Click(Sender: TObject);
var
   outfile:Textfile;
begin
   AssignFile(outfile,'out.txt');
   Rewrite(outfile);
   CloseFile(outfile);
end;

end.
